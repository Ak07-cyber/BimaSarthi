import { useMemo, useState, useEffect, useContext, createContext } from "react";
import type { ReactNode } from "react";

export type LangCode = "en" | "hi" | "bn" | "ta";
export interface I18nContextType {
  lang: LangCode;
  setLang: (l: LangCode) => void;
  t: (k: string, vars?: Record<string, string | number>) => string;
  rtl: boolean;
}

export const LANGS: Array<{ code: LangCode; label: string; rtl: boolean; speechLang: string }> = [
  { code: "en", label: "English", rtl: false, speechLang: "en-IN" },
  { code: "hi", label: "हिन्दी", rtl: false, speechLang: "hi-IN" },
  { code: "bn", label: "বাংলা", rtl: false, speechLang: "bn-IN" },
  { code: "ta", label: "தமிழ்", rtl: false, speechLang: "ta-IN" },
];

export const translations: Record<LangCode, Record<string, string>> = {
  en: {
    nav_home: "Home",
    nav_upload: "Upload & Explain",
    nav_language: "Languages",
    nav_recommend: "Recommendations",
    nav_learn: "Education Hub",
    cta_get_started: "Get Started",
    hero_title: "Your multilingual life-insurance copilot",
    hero_sub: "Upload a policy, get plain-language explanations, compare options, and learn in your local language.",
    hero_points_1: "De-complexify policy docs",
    hero_points_2: "Bridge language barriers",
    hero_points_3: "Transparent recommendations",
    hero_points_4: "360° awareness hub",
    disclaimer: "This is educational content, not financial advice.",
    upload_title: "De-complexify policy docs",
    upload_sub: "Upload a policy file to get key benefits, exclusions & trade-offs in plain language.",
    choose_file: "Choose file",
    or_drag: "or drag & drop",
    target_lang: "Target language",
    explain_btn: "Explain",
    sample_result: "Sample summary (mock)",
    speaking: "Speaking…",
    speak: "Speak",
    lang_title: "Languages & Localisation",
    lang_sub: "Switch the interface language.",
    lang_choose: "Pick your language",
    lang_tip: "Tip: More languages can be added later.",
    rec_title: "Personalised recommendations",
    rec_sub: "Tell us a few details and we’ll surface transparent options – not advice.",
    form_age: "Age",
    form_city: "City / State",
    form_income: "Monthly income (₹)",
    form_dependents: "Dependents",
    form_existing: "Existing cover (₹)",
    form_liabilities: "Liabilities (₹)",
    form_risk: "Risk tolerance",
    risk_low: "Low",
    risk_med: "Medium",
    risk_high: "High",
    form_goal: "Primary goal",
    goal_protection: "Protection",
    goal_savings: "Savings / Guaranteed",
    goal_growth: "Long-term growth",
    form_horizon: "Time horizon (yrs)",
    form_liquidity: "Need liquidity <5y?",
    form_preference: "Preference",
    pref_guaranteed: "Guaranteed",
    pref_market: "Market‑linked",
    form_health: "Health notes",
    form_smoker: "Smoker",
    form_budget: "Monthly budget (₹)",
    submit_get_rec: "Get recommendations",
    results: "Results",
    why: "Why?",
    learn_title: "Education Hub",
    learn_sub: "Articles in simple language.",
    search_placeholder: "Search topics…",
    view_article: "Read more",
  },
  hi: {
    nav_home: "होम",
    nav_upload: "अपलोड करें व समझें",
    nav_language: "भाषाएँ",
    nav_recommend: "सिफारिशें",
    nav_learn: "शिक्षा केंद्र",
    cta_get_started: "शुरू करें",
    hero_title: "आपका बहुभाषी जीवन बीमा सहायक",
    hero_sub: "पॉलिसी अपलोड करें, सरल भाषा में समझें, विकल्प तुलना करें, और अपनी भाषा में सीखें।",
    hero_points_1: "जटिल पॉलिसी दस्तावेज़ सरल करें",
    hero_points_2: "भाषाई बाधाएँ हटाएँ",
    hero_points_3: "पारदर्शी सिफारिशें",
    hero_points_4: "360° जागरूकता हब",
    disclaimer: "यह शैक्षिक सामग्री है, वित्तीय सलाह नहीं।",
    upload_title: "पॉलिसी दस्तावेज़ सरल करें",
    upload_sub: "पॉलिसी अपलोड करें और मुख्य फायदे, सीमाएँ तथा ट्रेड‑ऑफ सरल भाषा में पाएँ।",
    choose_file: "फ़ाइल चुनें",
    or_drag: "या ड्रैग करें",
    target_lang: "लक्षित भाषा",
    explain_btn: "समझाएँ",
    sample_result: "उदाहरण सारांश (मॉक)",
    speaking: "बोल रहा है…",
    speak: "आवाज़",
    lang_title: "भाषाएँ व स्थानीयकरण",
    lang_sub: "इंटरफ़ेस भाषा बदलें।",
    lang_choose: "भाषा चुनें",
    lang_tip: "सुझाव: बाद में और भाषाएँ जोड़ सकते हैं।",
    rec_title: "व्यक्तिगत सिफारिशें",
    rec_sub: "कुछ विवरण दें और हम पारदर्शी विकल्प दिखाएँगे (सलाह नहीं)।",
    form_age: "उम्र",
    form_city: "शहर / राज्य",
    form_income: "मासिक आय (₹)",
    form_dependents: " आश्रित",
    form_existing: "मौजूदा कवर (₹)",
    form_liabilities: "देयताएँ (₹)",
    form_risk: "जोखिम सहनशीलता",
    risk_low: "कम",
    risk_med: "मध्यम",
    risk_high: "उच्च",
    form_goal: "मुख्य लक्ष्य",
    goal_protection: "सुरक्षा",
    goal_savings: "बचत / गारंटीड",
    goal_growth: "दीर्घकालिक वृद्धि",
    form_horizon: "अवधि (वर्ष)",
    form_liquidity: "<5 वर्ष तरलता चाहिए?",
    form_preference: "प्राथमिकता",
    pref_guaranteed: "गारंटीड",
    pref_market: "मार्केट‑लिंक्ड",
    form_health: "स्वास्थ्य विवरण",
    form_smoker: "धूम्रपान करने वाला",
    form_budget: "मासिक बजट (₹)",
    submit_get_rec: "सिफारिशें पाएँ",
    results: "परिणाम",
    why: "क्यों?",
    learn_title: "शिक्षा केंद्र",
    learn_sub: "सरल भाषा में लेख।",
    search_placeholder: "विषय खोजें…",
    view_article: "और पढ़ें",
  },
  bn: {
    nav_home: "হোম",
    nav_upload: "আপলোড ও ব্যাখ্যা",
    nav_language: "ভাষা",
    nav_recommend: "সুপারিশ",
    nav_learn: "শিক্ষা হাব",
    cta_get_started: "শুরু করুন",
    hero_title: "আপনার বহুভাষিক জীবন বিমা সহায়ক",
    hero_sub: "পলিসি আপলোড করুন, সহজ ভাষায় ব্যাখ্যা পান, বিকল্প তুলনা করুন, এবং নিজের ভাষায় শিখুন।",
    hero_points_1: "জটিল পলিসি ডকুমেন্ট সহজ করুন",
    hero_points_2: "ভাষার বাধা দূর করুন",
    hero_points_3: "স্বচ্ছ সুপারিশ",
    hero_points_4: "৩৬০° সচেতনতা হাব",
    disclaimer: "এটি শিক্ষামূলক বিষয়বস্তু, আর্থিক পরামর্শ নয়।",
    upload_title: "পলিসি ডকুমেন্ট সহজ করুন",
    upload_sub: "পলিসি আপলোড করুন এবং মূল সুবিধা, সীমাবদ্ধতা ও ট্রেড‑অফ সহজ ভাষায় পান।",
    choose_file: "ফাইল বাছুন",
    or_drag: "বা টেনে আনুন",
    target_lang: "লক্ষ্য ভাষা",
    explain_btn: "ব্যাখ্যা",
    sample_result: "নমুনা সারাংশ (মক)",
    speaking: "পড়ছে…",
    speak: "শুনুন",
    lang_title: "ভাষা ও লোকালাইজেশন",
    lang_sub: "ইন্টারফেস ভাষা বদলান।",
    lang_choose: "আপনার ভাষা নির্বাচন করুন",
    lang_tip: "টিপ: পরে আরও ভাষা যোগ করা যাবে।",
    rec_title: "ব্যক্তিগত সুপারিশ",
    rec_sub: "কিছু তথ্য দিন, আমরা স্বচ্ছ অপশন দেখাব (পরামর্শ নয়)।",
    form_age: "বয়স",
    form_city: "শহর / রাজ্য",
    form_income: "মাসিক আয় (₹)",
    form_dependents: "নির্ভরশীল",
    form_existing: "বর্তমান কভার (₹)",
    form_liabilities: "দায় (₹)",
    form_risk: "ঝুঁকি সহনশীলতা",
    risk_low: "কম",
    risk_med: "মাঝারি",
    risk_high: "উচ্চ",
    form_goal: "প্রধান লক্ষ্য",
    goal_protection: "সুরক্ষা",
    goal_savings: "সঞ্চয় / গ্যারান্টি",
    goal_growth: "দীর্ঘমেয়াদী বৃদ্ধি",
    form_horizon: "সময় (বছর)",
    form_liquidity: "<5 বছরে নগদ লাগবে?",
    form_preference: "পছন্দ",
    pref_guaranteed: "গ্যারান্টিযুক্ত",
    pref_market: "মার্কেট‑লিংকড",
    form_health: "স্বাস্থ্য নোট",
    form_smoker: "ধূমপায়ী",
    form_budget: "মাসিক বাজেট (₹)",
    submit_get_rec: "সুপারিশ দেখুন",
    results: "ফলাফল",
    why: "কেন?",
    learn_title: "শিক্ষা হাব",
    learn_sub: "সহজ ভাষায় আর্টিকেল।",
    search_placeholder: "বিষয় খুঁজুন…",
    view_article: "বিস্তারিত",
  },
  ta: {
    nav_home: "முகப்பு",
    nav_upload: "பதிவேற்று & விளக்கவும்",
    nav_language: "மொழிகள்",
    nav_recommend: "பரிந்துரைகள்",
    nav_learn: "கல்வி மையம்",
    cta_get_started: "தொடங்கவும்",
    hero_title: "உங்கள் பன்மொழி வாழ்க்கை காப்பீடு உதவியாளர்",
    hero_sub: "காப்பீடு பதிவேற்றவும், எளிய மொழியில் விளக்கவும், விருப்பங்களை ஒப்பிடவும், உங்கள் மொழியில் கற்றுக்கொள்ளவும்.",
    hero_points_1: "காப்பீடு ஆவணங்களை எளிமைப்படுத்தவும்",
    hero_points_2: "மொழி தடைகளை நீக்கவும்",
    hero_points_3: "வெளிப்படையான பரிந்துரைகள்",
    hero_points_4: "360° விழிப்புணர்வு மையம்",
    disclaimer: "இது கல்வி உள்ளடக்கம், நிதி ஆலோசனை அல்ல.",
    upload_title: "காப்பீடு ஆவணங்களை எளிதாக்கவும்",
    upload_sub: "பாலிசியை பதிவேற்றி முக்கிய நன்மைகள், விதிவிலக்கு & பரிமாற்றங்களை எளிய மொழியில் பெறுங்கள்.",
    choose_file: "கோப்பு தேர்வு",
    or_drag: "அல்லது இழுத்து விடவும்",
    target_lang: "இலக்கு மொழி",
    explain_btn: "விளக்கவும்",
    sample_result: "மாதிரி சுருக்கம் (மொக்)",
    speaking: "வாசிக்கிறது…",
    speak: "ஒலி",
    lang_title: "மொழிகள் & உள்ளூர்மயம்",
    lang_sub: "இன்டர்ஃபேஸ் மொழியை மாற்றுங்கள்.",
    lang_choose: "மொழியைத் தேர்ந்தெடுக்கவும்",
    lang_tip: "குறிப்பு: பின்னர் மேலும் மொழிகள் சேர்க்கலாம்.",
    rec_title: "தனிப்பயன் பரிந்துரைகள்",
    rec_sub: "சில விவரங்களைத் தெரிவியுங்கள்; நாங்கள் வெளிப்படையான விருப்பங்களை காட்டுகிறோம் (ஆலோசனை அல்ல).",
    form_age: "வயது",
    form_city: "நகரம் / மாநிலம்",
    form_income: "மாத வருமானம் (₹)",
    form_dependents: "பரம்பரைகள்",
    form_existing: "தற்போதைய கவர் (₹)",
    form_liabilities: "பாக்கிகள் (₹)",
    form_risk: "அபாய சகிப்பு",
    risk_low: "குறைவு",
    risk_med: "நடுத்தரம்",
    risk_high: "உயர்",
    form_goal: "முதன்மை குறிக்கோள்",
    goal_protection: "பாதுகாப்பு",
    goal_savings: "சேமிப்பு / உத்தரவாதம்",
    goal_growth: "நீண்டகால வளர்ச்சி",
    form_horizon: "கால வரம்பு (ஆண்டு)",
    form_liquidity: "5 ஆண்டுக்குள் பணம் தேவை?",
    form_preference: "விருப்பம்",
    pref_guaranteed: "உத்தரவாதம்",
    pref_market: "சந்தை‑இணைப்பு",
    form_health: "உடல் நலம்",
    form_smoker: "புகைப்பவர்",
    form_budget: "மாத செலவு (₹)",
    submit_get_rec: "பரிந்துரைகள்",
    results: "விளைவுகள்",
    why: "ஏன்?",
    learn_title: "கல்வி மையம்",
    learn_sub: "எளிய மொழியில் கட்டுரைகள்.",
    search_placeholder: "தலைப்புகள் தேட…",
    view_article: "மேலும்",
  },
};

export const I18nContext = createContext<I18nContextType>({
  lang: "en",
  setLang: () => {},
  t: (k) => k,
  rtl: false,
});

export function I18nProvider({ children }: { children: ReactNode }) {
  const [lang, setLang] = useState<LangCode>("en");
  const dict = translations[lang] || translations.en;
  const rtl = LANGS.find((l) => l.code === lang)?.rtl ?? false;
  const t = (k: string, vars: Record<string, string | number> = {}) => {
    const s = dict[k] || translations.en[k] || k;
    return Object.keys(vars).reduce((acc, key) => acc.replaceAll(`{${key}}`, String(vars[key])), s);
  };
  const value = useMemo(() => ({ lang, setLang, t, rtl }), [lang]);
  useEffect(() => {
    document.documentElement.dir = rtl ? "rtl" : "ltr";
  }, [rtl]);
  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>;
}

export const useI18n = () => useContext(I18nContext);
